@using Microsoft.AspNetCore.Identity
@model IEnumerable<ApplicationUser>
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "User Management";
}



<div class="container-fluid p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">User Management</h2>
        <div class="toolbar">
            <button type="button" class="btn btn-danger me-2" data-action="block">
                <i class="fas fa-ban me-2"></i>Block
            </button>
            <button type="button" class="btn btn-success me-2" data-action="unblock">
                <i class="fas fa-check-circle me-2"></i>Unblock
            </button>
            <button type="button" class="btn btn-danger" data-action="delete">
                <i class="fas fa-trash-alt me-2"></i>Delete
            </button>
        </div>
    </div>

    <div class="card shadow">
        <div class="card-body p-0">
            <table class="table table-hover mb-0">
                <thead class="bg-light">
                    <tr>
                        <th style="width: 40px;">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="selectAll">
                            </div>
                        </th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Last Login</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>
                                <div class="form-check">
                                    <input class="form-check-input user-checkbox" type="checkbox" value="@user.Id">
                                </div>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="ms-3">
                                        <h6 class="mb-0">@user.UserName</h6>
                                    </div>
                                </div>
                            </td>
                            <td>@user.Email</td>
                            <td>
                                <span class="text-muted">@user.LastLogin.ToRelativeTime()</span>
                            </td>
                            <td>
                                    @{
                                        var isBlocked = await UserManager.IsLockedOutAsync(user);
                                        var statusClass = isBlocked ? "bg-danger" : "bg-success";
                                        var statusText = isBlocked ? "Blocked" : "Active";
                                    }
                                <span class="badge @statusClass">@statusText</span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Select All checkbox
            document.getElementById('selectAll').addEventListener('change', function() {
                document.querySelectorAll('.user-checkbox').forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });

            // Toolbar actions
            document.querySelectorAll('[data-action]').forEach(button => {
                button.addEventListener('click', function() {
                    const selectedIds = Array.from(document.querySelectorAll('.user-checkbox:checked'))
                        .map(checkbox => checkbox.value);

                    if (selectedIds.length === 0) {
                        alert('Please select at least one user');
                        return;
                    }

                    const action = this.dataset.action;
                    if (confirm(`Are you sure you want to ${action} selected users?`)) {
                        fetch(`/Home/${action}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify(selectedIds)
                        }).then(response => {
                            if (response.ok) {
                                window.location.reload();
                            }
                        });
                    }
                });
            });
        });
    </script>
}